#!/bin/env bash

HUDDLE_DIR="${1:-$HOME/projects/oss/huddle}"

have_package() {
    dpkg -s "$1" >/dev/null
}

have_command() {
    command -v "$1" >/dev/null
}

install_rvm() {
    have_package rvm && return 0

    sudo apt-add-repository -y ppa:rael-gc/rvm \
	&& sudo apt-get update \
	&& sudo apt-get -y install rvm \
	&& sudo usermod -a -G rvm $USER
}

install_nvm() {
    [ -e "$HOME/.nvm/nvm.sh" ] && return 0

    sudo apt-get -y install curl \
	&& (curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash)
}

install_yarn() {
    have_package yarn && return 0

    curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add - \
	&& echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list \
	&& sudo apt update \
	&& sudo apt -y install yarn
}

# https://redis.io/download#from-the-official-debianubuntu-apt-repository-beta
install_redis() {
    have_package redis && return 0

    sudo add-apt-repository ppa:redislabs/redis \
	 && sudo apt-get update \
	 && sudo apt-get -y install redis \
	 && sudo systemctl enable redis-server
}

# https://www.digitalocean.com/community/tutorials/how-to-install-mariadb-on-ubuntu-20-04
install_mariadb() {
    have_package mariadb-server && return 0

    sudo apt-get -y install mariadb-server \
	&& sudo mysql_secure_installation \
	&& sudo systemctl enable mariadb
}

install_timezone_config() {
    echo "Logging into the DB..."
    mysql_tzinfo_to_sql /usr/share/zoneinfo | mysql -u root -p mysql
}

# https://www.digitalocean.com/community/tutorials/how-to-install-and-configure-elasticsearch-on-ubuntu-20-04
install_elasticsearch() {
    have_package elasticsearch && return 0

    curl -fsSL https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add - \
	&& echo "deb https://artifacts.elastic.co/packages/7.x/apt stable main" | sudo tee -a /etc/apt/sources.list.d/elastic-7.x.list \
	&& sudo apt update \
	&& sudo apt -y install elasticsearch \
	&& sudo systemctl enable elasticsearch
}

clone_huddle() {
    [ -e "$HUDDLE_DIR/Gemfile" ] && return 0

    mkdir -p "$HUDDLE_DIR" \
	&& cd "$HUDDLE_DIR" \
	&& git clone git@github.com:officespacesoftware/huddle.git
}

install_ruby_and_gems() {
    cd "$HUDDLE_DIR" \
	&& source "/usr/share/rvm/scripts/rvm" \
	&& rvm install "$(cat .ruby-version)" \
	&& rvm use "$(cat .ruby-version)@$(cat .ruby-gemset)" --create \
	&& gem install mailcatcher \
	&& gem install bundler --version "$(tail -1 Gemfile.lock)" \
	&& bundle install
}

install_node_and_packages() {
    export NODE_OPTIONS='--max-old-space-size=8120'
    source "$HOME/.nvm/nvm.sh"

    nvm install "$(cat .node-version)" \
	&& nvm use "$(cat .node-version)" \
	&& yarn install \
	&& RAILS_ENV=development bin/webpack --inline
}

display_instructions() {
    echo
    echo "Manual steps:"
    echo "cd $HUDDLE_DIR"
    echo "cp -n config/database.yml.example config/database.yml"
    echo "cp -n config/application.yml.example config/application.yml"
    echo "vi config/database.yml"
    echo "vi config/application.yml"
    echo "RAILS_ENV=test ./bin/rails db:setup"
    echo "RAILS_ENV=test ./bin/rails db:migrate"
    echo "./bin/clone-server develop ."
    echo "bundle exec rails runner '[Employee, Seat, Room, SeatOpenBooking, Neighborhoods::Neighborhood].each(&:reindex)'"
    echo
    echo "Also see https://github.com/officespacesoftware/huddle/blob/develop/doc/readme/setup.md"
}

install_nvm \
    && install_rvm \
    && install_yarn \
    && install_redis \
    && install_mariadb \
    && install_elasticsearch \
    && sudo apt-get -y install libmysqlclient-dev librsvg2-bin libgeos-dev libvips-dev imagemagick pdf2svg \
    && install_timezone_config \
    && clone_huddle \
    && install_ruby_and_gems \
    && install_node_and_packages \
    && display_instructions

