# frozen_string_literal: true
#-*-ruby-*-
# https://bugsnagapiv2.docs.apiary.io/
# https://github.com/bugsnag/bugsnag-api-ruby#readme

# BUGSNAG_ERROR_ID= BUGSNAG_PROJECT_ID= BUGSNAG_PERSONAL_API_KEY= bundle exec rails runner dump-bugsnag-error

require 'bugsnag/api' # Add the bugsnag-api gem to Gemfile
require 'pp'

Bugsnag::Api.configure do |config|
  config.auth_token = ENV['BUGSNAG_PERSONAL_API_KEY']
end

events = Bugsnag::Api.error_events(ENV['BUGSNAG_PROJECT_ID'],
                                   ENV['BUGSNAG_ERROR_ID'],
                                   per_page: 100)

last_response = Bugsnag::Api.last_response
until last_response.rels[:next].nil?
  sleep 1 # https://bugsnagapiv2.docs.apiary.io/#introduction/rate-limiting
  puts 'Getting next page...'
  last_response = last_response.rels[:next].get
  events.concat(last_response.data)
end

events
  .group_by { |event| event[:context] }
  .map { |key, grouped_events| puts "#{grouped_events.length} #{key}" }

earliest_date = events.map { |event| event[:received_at] }
                      .min
                      .to_s
puts "\nEarliest date is: #{earliest_date}"
